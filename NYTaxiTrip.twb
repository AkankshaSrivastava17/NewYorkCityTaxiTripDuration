<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0510.1418                               -->
<workbook original-version='18.1' source-build='2018.1.1 (20181.18.0510.1418)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='train' inline='true' name='federated.1myl53q1t8nbts1h558a718sao7p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.17jr9hg10o78hp13yxro20kdntbc'>
            <connection class='textscan' directory='C:/Users/Sousa/Desktop/Renato/NewYorkCityTaxiTripDuration/data' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.17jr9hg10o78hp13yxro20kdntbc' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR' separator=','>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='integer' name='vendor_id' ordinal='1' />
            <column datatype='datetime' name='pickup_datetime' ordinal='2' />
            <column datatype='datetime' name='dropoff_datetime' ordinal='3' />
            <column datatype='integer' name='passenger_count' ordinal='4' />
            <column datatype='string' name='pickup_longitude' ordinal='5' />
            <column datatype='string' name='pickup_latitude' ordinal='6' />
            <column datatype='string' name='dropoff_longitude' ordinal='7' />
            <column datatype='string' name='dropoff_latitude' ordinal='8' />
            <column datatype='string' name='store_and_fwd_flag' ordinal='9' />
            <column datatype='integer' name='trip_duration' ordinal='10' />
            <column datatype='string' name='distance' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vendor_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vendor_id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>vendor_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[pickup_datetime]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>pickup_datetime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[dropoff_datetime]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>dropoff_datetime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger_count]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>passenger_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_longitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>pickup_longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_latitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>pickup_latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_longitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>dropoff_longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_latitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>dropoff_latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_and_fwd_flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_and_fwd_flag]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>store_and_fwd_flag</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_duration]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>trip_duration</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
      </column>
      <column aggregation='Avg' caption='dropoff_lat' datatype='real' name='[Calculation_347340130977636354]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='// convert string to float (lat)&#13;&#10;FLOAT([dropoff_latitude])' />
      </column>
      <column aggregation='Avg' caption='dropoff_long' datatype='real' name='[Calculation_347340130977902595]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='// convert string to long&#13;&#10;FLOAT([dropoff_longitude])' />
      </column>
      <column aggregation='Avg' caption='pickup_lat' datatype='real' name='[Calculation_347340130978074628]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='// Convert string to lat&#13;&#10;FLOAT([pickup_latitude])' />
      </column>
      <column aggregation='Avg' caption='pickup_long' datatype='real' name='[Calculation_347340130978222085]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='// Convert string to long&#13;&#10;FLOAT([pickup_longitude])' />
      </column>
      <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
      </column>
      <column aggregation='None' datatype='integer' name='[DistanceKm (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_560416688369254400]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[passenger_count (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[passenger_count]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
      <column datatype='datetime' name='[pickup_datetime]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='integer' name='[trip_duration (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[trip_duration]' peg='0' size='100' />
      </column>
      <column aggregation='None' datatype='integer' name='[trip_durationMinute (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_347340130972073985]' peg='0' size='2' />
      </column>
      <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
      <column-instance column='[pickup_datetime]' derivation='Hour' name='[hr:pickup_datetime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pickup_datetime]' derivation='Weekday' name='[wd:pickup_datetime:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.535831' measure-ordering='alphabetic' measure-percentage='0.464169' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[wd:pickup_datetime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:pickup_datetime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>12</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>20</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>23</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>13</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>14</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>15</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>16</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>17</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>18</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>19</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1myl53q1t8nbts1h558a718sao7p'>
      <datasources>
        <datasource caption='train' name='federated.1myl53q1t8nbts1h558a718sao7p' />
      </datasources>
      <datasource-dependencies datasource='federated.1myl53q1t8nbts1h558a718sao7p'>
        <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
        </column>
        <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
        </column>
        <column-instance column='[Calculation_347340130972073985]' derivation='None' name='[none:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_560416688369254400]' derivation='None' name='[none:Calculation_560416688369254400:qk]' pivot='key' type='quantitative' />
        <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:qk]' pivot='key' type='quantitative' />
        <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' included-values='in-range'>
        <min>1.0</min>
        <max>180.0</max>
      </filter>
      <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' included-values='in-range'>
        <min>1.0</min>
        <max>60.0</max>
      </filter>
      <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]' included-values='in-range'>
        <min>1</min>
        <max>5</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1myl53q1t8nbts1h558a718sao7p' />
          </datasources>
          <datasource-dependencies datasource='federated.1myl53q1t8nbts1h558a718sao7p'>
            <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
            </column>
            <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
            </column>
            <column datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_347340130972073985]' derivation='None' name='[none:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560416688369254400]' derivation='None' name='[none:Calculation_560416688369254400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' scope='cols' value='Distance' />
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' scope='cols' value='Km' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' scope='rows' value='Trip Duration' />
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' scope='rows' value='Minute' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</rows>
        <cols>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='PassengerCount'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1myl53q1t8nbts1h558a718sao7p' />
          </datasources>
          <datasource-dependencies datasource='federated.1myl53q1t8nbts1h558a718sao7p'>
            <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
            </column>
            <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
            </column>
            <column-instance column='[passenger_count]' derivation='Count' name='[cnt:passenger_count:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_347340130972073985]' derivation='None' name='[none:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560416688369254400]' derivation='None' name='[none:Calculation_560416688369254400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count (bin)]' derivation='None' name='[none:passenger_count (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[passenger_count (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[passenger_count]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:passenger_count:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:passenger_count:qk]' scope='rows' value='Number  of  Trips' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count (bin):qk]' scope='cols' value='Count  Passenger ' />
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count (bin):qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count (bin):qk]' scope='cols' value='bin' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:passenger_count:qk]</rows>
        <cols>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1myl53q1t8nbts1h558a718sao7p].[passenger_count (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='TripDuration Frequency'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1myl53q1t8nbts1h558a718sao7p' />
          </datasources>
          <datasource-dependencies datasource='federated.1myl53q1t8nbts1h558a718sao7p'>
            <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
            </column>
            <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
            </column>
            <column-instance column='[Calculation_347340130972073985]' derivation='Count' name='[cnt:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_347340130972073985]' derivation='None' name='[none:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560416688369254400]' derivation='None' name='[none:Calculation_560416688369254400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_durationMinute (bin)]' derivation='None' name='[none:trip_durationMinute (bin):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[trip_durationMinute (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_347340130972073985]' peg='0' size='2' />
            </column>
            <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]' scope='cols' value='Minute' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]' scope='cols' value='Trip Duration' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:Calculation_347340130972073985:qk]' scope='rows' value='Count of Trip Duration' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:Calculation_347340130972073985:qk]</rows>
        <cols>[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1myl53q1t8nbts1h558a718sao7p].[trip_durationMinute (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='TripDuration Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_duration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[hr:pickup_datetime:ok]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[wd:pickup_datetime:ok]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[yr:pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='PassengerCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PassengerCount' width='192'>
      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
      JNlPdwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TripDuration Frequency' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
