<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0510.1418                               -->
<workbook original-version='18.1' source-build='2018.1.1 (20181.18.0510.1418)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='train' inline='true' name='federated.1myl53q1t8nbts1h558a718sao7p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.17jr9hg10o78hp13yxro20kdntbc'>
            <connection class='textscan' directory='C:/Users/Sousa/Desktop/Renato/NewYorkCityTaxiTripDuration/data' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.17jr9hg10o78hp13yxro20kdntbc' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR' separator=','>
            <column datatype='string' name='id' ordinal='0' />
            <column datatype='integer' name='vendor_id' ordinal='1' />
            <column datatype='datetime' name='pickup_datetime' ordinal='2' />
            <column datatype='datetime' name='dropoff_datetime' ordinal='3' />
            <column datatype='integer' name='passenger_count' ordinal='4' />
            <column datatype='string' name='pickup_longitude' ordinal='5' />
            <column datatype='string' name='pickup_latitude' ordinal='6' />
            <column datatype='string' name='dropoff_longitude' ordinal='7' />
            <column datatype='string' name='dropoff_latitude' ordinal='8' />
            <column datatype='string' name='store_and_fwd_flag' ordinal='9' />
            <column datatype='integer' name='trip_duration' ordinal='10' />
            <column datatype='string' name='distance' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vendor_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vendor_id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>vendor_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[pickup_datetime]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>pickup_datetime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[dropoff_datetime]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>dropoff_datetime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger_count]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>passenger_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_longitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>pickup_longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_latitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>pickup_latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_longitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>dropoff_longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_latitude]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>dropoff_latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_and_fwd_flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_and_fwd_flag]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>store_and_fwd_flag</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_duration]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>trip_duration</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RBR' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
      </column>
      <column aggregation='Avg' caption='dropoff_lat' datatype='real' name='[Calculation_347340130977636354]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='// convert string to float (lat)&#13;&#10;FLOAT([dropoff_latitude])' />
      </column>
      <column aggregation='Avg' caption='dropoff_long' datatype='real' name='[Calculation_347340130977902595]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='// convert string to long&#13;&#10;FLOAT([dropoff_longitude])' />
      </column>
      <column aggregation='Avg' caption='pickup_lat' datatype='real' name='[Calculation_347340130978074628]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='// Convert string to lat&#13;&#10;FLOAT([pickup_latitude])' />
      </column>
      <column aggregation='Avg' caption='pickup_long' datatype='real' name='[Calculation_347340130978222085]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='// Convert string to long&#13;&#10;FLOAT([pickup_longitude])' />
      </column>
      <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
      </column>
      <column aggregation='None' datatype='integer' name='[DistanceKm (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_560416688369254400]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='datetime' name='[pickup_datetime]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='integer' name='[trip_duration (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[trip_duration]' peg='0' size='100' />
      </column>
      <column aggregation='None' datatype='integer' name='[trip_durationMinute (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_347340130972073985]' peg='0' size='2' />
      </column>
      <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
      <column-instance column='[pickup_datetime]' derivation='Hour' name='[hr:pickup_datetime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[pickup_datetime]' derivation='Weekday' name='[wd:pickup_datetime:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.534202' measure-ordering='alphabetic' measure-percentage='0.465798' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[wd:pickup_datetime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:pickup_datetime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>12</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>20</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>23</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>13</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>14</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>15</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>16</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>17</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>18</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>19</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='TripDuration Frequency'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1myl53q1t8nbts1h558a718sao7p' />
          </datasources>
          <datasource-dependencies datasource='federated.1myl53q1t8nbts1h558a718sao7p'>
            <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
            </column>
            <column-instance column='[Calculation_347340130972073985]' derivation='Count' name='[cnt:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_347340130972073985]' derivation='None' name='[none:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_durationMinute (bin)]' derivation='None' name='[none:trip_durationMinute (bin):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[trip_durationMinute (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_347340130972073985]' peg='0' size='2' />
            </column>
            <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' filter-group='3' included-values='in-range'>
            <min>1.0</min>
            <max>180.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]' filter-group='6' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]' scope='cols' value='Minute' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]' scope='cols' value='Trip Duration' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:Calculation_347340130972073985:qk]' scope='rows' value='Count of Trip Duration' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1myl53q1t8nbts1h558a718sao7p].[cnt:Calculation_347340130972073985:qk]</rows>
        <cols>[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_durationMinute (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1myl53q1t8nbts1h558a718sao7p].[trip_durationMinute (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='TripDuration x Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1myl53q1t8nbts1h558a718sao7p' />
          </datasources>
          <datasource-dependencies datasource='federated.1myl53q1t8nbts1h558a718sao7p'>
            <column caption='trip_durationMinute' datatype='real' name='[Calculation_347340130972073985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// trip_duration seconds to minutes&#13;&#10;[trip_duration]/60' />
            </column>
            <column caption='DistanceKm' datatype='real' name='[Calculation_560416688369254400]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// convert string to float&#13;&#10;FLOAT([distance])' />
            </column>
            <column datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_347340130972073985]' derivation='None' name='[none:Calculation_347340130972073985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_560416688369254400]' derivation='None' name='[none:Calculation_560416688369254400:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[passenger_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[trip_duration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' filter-group='3' included-values='in-range'>
            <min>1.0</min>
            <max>180.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>60.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]' filter-group='6' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</column>
            <column>[federated.1myl53q1t8nbts1h558a718sao7p].[none:passenger_count:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' scope='cols' value='Distance' />
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]' scope='cols' value='Km' />
            <format attr='title' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' scope='rows' value='Trip Duration' />
            <format attr='auto-subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]' scope='rows' value='Minute' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</rows>
        <cols>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='TripDuration Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_347340130972073985:qk]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:trip_duration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='TripDuration x Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[hr:pickup_datetime:ok]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[none:Calculation_560416688369254400:qk]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[wd:pickup_datetime:ok]</field>
            <field>[federated.1myl53q1t8nbts1h558a718sao7p].[yr:pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='TripDuration Frequency' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TripDuration x Distance' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
